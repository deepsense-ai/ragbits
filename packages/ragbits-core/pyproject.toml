[project]
name = "ragbits-core"
version = "0.4.0"
description = "Building blocks for rapid development of GenAI applications"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    { name = "deepsense.ai", email = "ragbits@deepsense.ai"}
]
keywords = [
    "Retrieval Augmented Generation",
    "RAG",
    "Large Language Models",
    "LLMs",
    "Generative AI",
    "GenAI",
    "Prompt Management"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "jinja2>=3.1.4",
    "pydantic>=2.9.1",
    "typer~=0.12.5",
    "tomli~=2.0.2",
]

[project.urls]
"Homepage" = "https://github.com/deepsense-ai/ragbits"
"Bug Reports" = "https://github.com/deepsense-ai/ragbits/issues"
"Documentation" = "https://ragbits.deepsense.ai/"
"Source" = "https://github.com/deepsense-ai/ragbits"

[project.optional-dependencies]
chroma = [
    "chromadb~=0.4.24",
]
litellm = [
    "litellm~=1.46.0",
]
local = [
    "torch~=2.2.1",
    "transformers~=4.44.2",
    "numpy~=1.26.0"
]
lab = [
    "gradio~=4.44.0",
]
promptfoo = [
    "PyYAML~=6.0.2",
]
otel = [
    "opentelemetry-api~=1.27.0",
]
qdrant = [
    "qdrant-client~=1.12.1",
]

[tool.uv]
dev-dependencies = [
    "pre-commit~=3.8.0",
    "pytest~=8.3.3",
    "pytest-cov~=5.0.0",
    "pytest-asyncio~=0.24.0",
    "pip-licenses>=4.0.0,<5.0.0"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/ragbits"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
